input{
#stdin{}
#udp {
#        type => "Syslog"
#        port => 5000
#    }
file {
        path => "/home/syslog_final/sccm_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}
filter
{
	 mutate{
                    gsub => ["message","  "," "]
		}
        if [message] =~ "%MS_SCCM" and [message] =~ "IntialDiff:"
        {

        grok {
                match => ["message","%{WORD} %{INT} %{TIME} %{DATA} %{DATA:sccmsyslog}: %{GREEDYDATA:sccmmsg}" ]
             }
        csv {
                source => "sccmmsg"
                autogenerate_column_names => "true"
                separator => "^^"
            }
         mutate {
		add_field => ["txncustomfield1","%{column1}"]
                add_field => ["txncustomfield2","%{column2}"]
                add_field => ["txncustomfield3","%{column3}"]
                add_field => ["txncustomfield4","%{column4}"]
                add_field => ["txncustomfield5","%{column5}"]
                add_field => ["txncustomfield6","%{column6}"]
                add_field => ["txncustomfield7","%{column7}"]
		add_field => ["txncustomfield8","%{column8}"]
                add_field => ["txncustomfield9","%{column9}"]
				}
		mutate
                {
                split => ["sccmsyslog","_"]
                add_field => ["eventtype","%{[sccmsyslog][3]}"]
                }
ruby { code => "event['txncustomfield15'] = nil" }
}
 if [message] =~ "%MS_SCCM" and [message] =~ "OfflineInstall" and [message] !~ "_not_in_ARP"
        {

        grok {
                match => ["message","%{WORD} %{INT} %{TIME} %{DATA} %{DATA:sccmsyslog}: %{GREEDYDATA:sccmmsg}" ]
             }

        csv {
                source => "sccmmsg"
                autogenerate_column_names => "true"
                separator => "^^"
            }
		mutate {
                add_field => ["txncustomfield1","%{column1}"]
                add_field => ["txncustomfield2","%{column2}"]
                add_field => ["txncustomfield3","%{column3}"]
                add_field => ["txncustomfield4","%{column4}"]
                add_field => ["txncustomfield5","%{column5}"]
                add_field => ["txncustomfield6","%{column6}"]
                add_field => ["txncustomfield15","%{column7}"]
                add_field => ["txncustomfield8","%{column8}"]
                add_field => ["txncustomfield9","%{column9}"]
                add_field => ["txncustomfield10","%{column10}"]
                add_field => ["txncustomfield11","%{column11}"]
                                }
                mutate
                {
                split => ["sccmsyslog","_"]
                add_field => ["eventtype","%{[sccmsyslog][3]}"]
                }
        }
 if [message] =~ "%MS_SCCM" and [message] =~ "OfflineInstalls_not_in_ARP"
        {

        grok {
                match => ["message","%{WORD} %{INT} %{TIME} %{DATA} %{DATA:sccmsyslog}: %{GREEDYDATA:sccmmsg}" ]
             }

        csv {
                source => "sccmmsg"
                autogenerate_column_names => "true"
                separator => "^^"
            }
                mutate {
                add_field => ["txncustomfield1","%{column1}"]
                add_field => ["txncustomfield2","%{column2}"]
                add_field => ["txncustomfield3","%{column3}"]
                add_field => ["txncustomfield4","%{column4}"]
                add_field => ["txncustomfield5","%{column5}"]
                add_field => ["txncustomfield6","%{column6}"]
                add_field => ["txncustomfield15","%{column7}"]
                add_field => ["txncustomfield8","%{column8}"]
                add_field => ["txncustomfield9","%{column9}"]
                add_field => ["txncustomfield10","%{column10}"]
                add_field => ["txncustomfield11","%{column11}"]
                                }
                mutate
                {
                split => ["sccmsyslog","_"]
                add_field => ["eventtype","%{[sccmsyslog][3]} %{[sccmsyslog][4]} %{[sccmsyslog][5]} %{[sccmsyslog][6]}"]
                }
        }
if "_grokparsefailure" in [tags]{       drop {}  }
}
output {
 if [message] =~ "%MS_SCCM" and [message] =~ "IntialDiff:" 
{
        csv {
                 fields => ["eventtype","txncustomfield1","txncustomfield2","txncustomfield3","txncustomfield4","txncustomfield5","txncustomfield6","txncustomfield7","txncustomfield8","txncustomfield9","txncustomfield10","txncustomfield11"]
                path => "/opt/gra/activitylogmgr/logs/out/syslog/Sccm_InitialDiff_%{+YYYY-MM-dd-HH}.csv"
            }
}
 else if [message] =~ "%MS_SCCM" and [message] !~ "IntialDiff:" 
{
        csv {
                 fields => ["eventtype","txncustomfield1","txncustomfield2","txncustomfield3","txncustomfield4","txncustomfield5","txncustomfield6","txncustomfield7","txncustomfield8","txncustomfield9","txncustomfield10","txncustomfield11"]
                path => "/opt/gra/activitylogmgr/logs/out/syslog/Sccm_%{+YYYY-MM-dd-HH}.csv"
            }
}
#      stdout{
 #              codec => rubydebug
  #           }
}
