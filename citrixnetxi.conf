input{

#udp {
#	type => "syslog"
#	port => 6000
# }
#stdin{}
file {
        path => "/home/syslog_final/Citrixxi_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}

filter{
	mutate {
		gsub => ["message",":  ",": "]
		gsub => ["message","  "," "]
		}
	
if [message] =~ "XICONNECT" and [message] =~ "TCP CONN_TERMINATE"
	{
		
		grok {
match => ["message", "%{MONTH} %{MONTHDAY} %{TIME} %{IP} %{DATE_US:netscalerdate}: %{TIME:netscalertime} GMT %{SYSLOGHOST:servername} %{DATA:txncustomfield1} : %{DATA:domainname} %{POSINT:txncustomfield2} %{INT} : %{GREEDYDATA:result}"]  
		    }
	    mutate {
		    #gsub => ["result",":","-"]
		    gsub => ["result",": ","-"]
		    gsub => ["result","Start Time","Start_time"]
		    gsub => ["result","End Time","End_time"]
		    gsub => ["result","Delink Time","DelinkTime"]
		    add_field => ["eventdate","%{netscalerdate} %{netscalertime}"]
		   }
	       kv  
		 {
		   source  => "result"
		   value_split => " "
                   field_split => "-"
                  }
	   
                mutate {
			         add_field => ["ip","%{Source}"]
#			         add_field => ["txncustomfield7","%{Source}"]
                                 add_field => ["ip1","%{Destination}"]
                                 add_field => ["txncustomfield9","%{Start_time}"]
                                 add_field => ["txncustomfield10","%{End_time}"]
           	
			         add_field => ["txncustomfield4","%{Total_bytes_send}"]
			         add_field => ["txncustomfield18","%{Total_bytes_recv}"]
			
		  }
	  mutate {
			split  => ["ip",":"]
			split  => ["ip1",":"]
		}
	 mutate {
		        add_field  => ["ipaddress","%{[ip][0]}"]
			add_field  => ["txncustomfield8","%{[ip1][0]}"]
		}
	
                                  ruby { code => "event['txncustomfield20'] = nil"}
                                  ruby { code => "event['txncustomfield21'] = nil" }
                                  ruby { code => "event['txncustomfield22'] = nil" }
                                  ruby { code => "event['txncustomfield23'] = nil" }
                                  ruby { code => "event['txncustomfield24'] = nil" }
                                  ruby { code => "event['txncustomfield4'] = nil" }
                                   ruby { code => "event['txncustomfield6'] = nil" }
                                  ruby { code => "event['employeeid'] = nil" }
                                  ruby { code => "event['txncustomfield5'] = nil" }
                                  ruby { code => "event['txncustomfield11'] = nil" }

                                  ruby { code => "event['txncustomfield14'] = nil"}
                                  ruby { code => "event['txncustomfield15'] = nil" }
                                  ruby { code => "event['txncustomfield16'] = nil" }
                                  ruby { code => "event['txncustomfield17'] = nil" }
                                                      
                                 ruby { code => "event['txncustomfield13'] = nil" }
                                 ruby { code => "event['txncustomfield12'] = nil" }
                                 ruby { code => "event['objecttype'] = nil" }
                                 ruby { code => "event['objectfolder'] = nil" }

	}

 else if [message] =~ "XICONNECT" and [message] =~ "TCP CONN_DELINK"
        {

                grok {
match => ["message", "%{MONTH} %{MONTHDAY} %{TIME} %{IP} %{DATE_US:netscalerdate}: %{TIME:netscalertime} GMT %{SYSLOGHOST:servername} %{DATA:txncustomfield1} : %{DATA:domainname} %{POSINT:txncustomfield2} %{INT} : %{GREEDYDATA:result}"]
                    }
            mutate {
                    #gsub => ["result",":","-"]
                    gsub => ["result",": ","-"]
                    gsub => ["result","Start Time","Start_time"]
                    gsub => ["result","End Time","End_time"]
                    gsub => ["result","Delink Time","DelinkTime"]
                    add_field => ["eventdate","%{netscalerdate} %{netscalertime}"]
                   }
               kv
                 {
                   source  => "result"
                   value_split => " "
                   field_split => "-"
                  }

                mutate {
                                 add_field => ["ip","%{Source}"]
#                                 add_field => ["txncustomfield7","%{Source}"]
                                 add_field => ["ip1","%{Destination}"]
                                 add_field => ["txncustomfield9","%{DelinkTime}"]
                                 add_field => ["txncustomfield4","%{Total_bytes_send}"]
                                 add_field => ["txncustomfield18","%{Total_bytes_recv}"]

                  }
          mutate {
                        split  => ["ip",":"]
			split  => ["ip1",":"]
                }
         mutate {
                        add_field  => ["ipaddress","%{[ip][0]}"]
         		add_field  => ["txncustomfield8","%{[ip1][0]}"]
                 }

                                  ruby { code => "event['txncustomfield20'] = nil"}
                                  ruby { code => "event['txncustomfield21'] = nil" }
                                  ruby { code => "event['txncustomfield22'] = nil" }
                                  ruby { code => "event['txncustomfield23'] = nil" }
                                  ruby { code => "event['txncustomfield24'] = nil" }
                                  ruby { code => "event['txncustomfield4'] = nil" }
                                  ruby { code => "event['txncustomfield6'] = nil" }
                                  ruby { code => "event['employeeid'] = nil" }
                                  ruby { code => "event['txncustomfield5'] = nil" }
                                  ruby { code => "event['txncustomfield11'] = nil" }
                                  #ruby { code => "event['txncustomfield9'] = nil" }
                                  ruby { code => "event['txncustomfield10'] = nil" }
                                  ruby { code => "event['txncustomfield14'] = nil"}
                                  ruby { code => "event['txncustomfield15'] = nil" }
                                  ruby { code => "event['txncustomfield16'] = nil" }
                                  ruby { code => "event['txncustomfield17'] = nil" }

                                 ruby { code => "event['txncustomfield13'] = nil" }
                                 ruby { code => "event['txncustomfield12'] = nil" }
                                 ruby { code => "event['objecttype'] = nil" }
                                 ruby { code => "event['objectfolder'] = nil" }
        }

else  if [message] =~ "XICONNECT" and [message] =~ "SSLVPN Message"
        {

                grok {
match => ["message", "%{MONTH} %{MONTHDAY} %{TIME} %{IP} %{DATE_US:netscalerdate}: %{TIME:netscalertime} GMT %{SYSLOGHOST:servername} %{DATA:txncustomfield1} : %{DATA:domainname} %{POSINT:txncustomfield2} %{INT} : %{GREEDYDATA:result}"]
                    }
	csv {
		source => "result"
		separator => ","
		}
         mutate {
		 add_field => ["eventdate","%{netscalerdate} %{netscalertime}"]
		 add_field => ["objectname","%{column1}"]
		add_field => ["eventdesc","%{column2}"]
		add_field => ["txncustomfield3","%{column3}"]
		}
                    
                                ruby { code => "event['txncustomfield4'] = nil" }
                                ruby { code => "event['employeeid'] = nil" }
                                ruby { code => "event['txncustomfield5'] = nil" }
                                ruby { code => "event['txncustomfield11'] = nil" }
                                ruby { code => "event['txncustomfield22'] = nil" }
                                ruby { code => "event['txncustomfield23'] = nil" }
                                ruby { code => "event['txncustomfield24'] = nil" }
                                ruby { code => "event['txncustomfield6'] = nil"}
                                 ruby { code => "event['txncustomfield15'] = nil" }
                                  ruby { code => "event['txncustomfield16'] = nil" }
                                  ruby { code => "event['txncustomfield17'] = nil" }
                                   ruby { code => "event['txncustomfield18'] = nil" }
				ruby { code => "event['txncustomfield7'] = nil"}
                                ruby { code => "event['txncustomfield8'] = nil" }
                                ruby { code => "event['txncustomfield10'] = nil" }
                                ruby { code => "event['txncustomfield9'] = nil" }
                                ruby { code => "event['txncustomfield13'] = nil" }
                                ruby { code => "event['txncustomfield12'] = nil" }
                                ruby { code => "event['objecttype'] = nil" }

       }




else  if [message] =~ "XICONNECT" and [message] =~ "SSLVPN TCPCONNSTAT"
        {

                grok {
match => ["message", "%{MONTH} %{MONTHDAY} %{TIME} %{IP} %{DATE_US:netscalerdate}: %{TIME:netscalertime} GMT %{SYSLOGHOST:servername} %{DATA:txncustomfield1} : %{DATA:domainname} %{POSINT:txncustomfield2} %{INT} : %{GREEDYDATA:result}"]
                    }
            mutate {
                   # gsub => ["result",":","-"]
                    gsub => ["result",": ","-"]
                    add_field => ["eventdate","%{netscalerdate} %{netscalertime}"]
                    }
           kv
             {
                 source  => "result"
                 value_split => " "
                 field_split => "-"
             }
	 mutate {
			add_field => ["employeeid","%{User}"]
			add_field => ["ip","%{Source}"]
			add_field => ["txncustomfield4","%{Total_bytes_send}"]
                        
                          add_field => ["objecttype","%{Context}"]
                           add_field => ["txncustomfield5","%{Nat_ip}"]
                             add_field => ["txncustomfield6","%{Vserver}"]
                                 add_field => ["txncustomfield7","%{Client_ip}"]
                                  add_field => ["ip1","%{Destination}"]
         
                         add_field => ["txncustomfield9","%{Start_time}"]
                                   add_field => ["txncustomfield10","%{End_time}"]
                                     add_field => ["txncustomfield11","%{Duration}"]
                                         add_field => ["txncustomfield12","%{Total_compressedbytes_send}"]
                                            add_field => ["txncustomfield13","%{Total_compressedbytes_recv}"]
                                            add_field => ["txncustomfield14","%{Compression_ratio_send}"]
                                            add_field => ["txncustomfield15","%{Compression_ratio_recv}"]
                                              add_field => ["txncustomfield16","%{Access}"] 
                                                   add_field => ["txncustomfield17","%{Group(s)}"]
                                                   add_field => ["txncustomfield18","%{Total_bytes_recv}"]
						}
				mutate{
					split => ["ip",":"]
					split => ["ip1",":"]
				}
				mutate {
		                        add_field  => ["ipaddress","%{[ip][0]}"]
                		        add_field  => ["txncustomfield8","%{[ip1][0]}"]
                 			}

                                  ruby { code => "event['txncustomfield20'] = nil"}
                                  ruby { code => "event['txncustomfield21'] = nil" }
                                  ruby { code => "event['txncustomfield22'] = nil" }
                                  ruby { code => "event['txncustomfield23'] = nil" }
                                  ruby { code => "event['txncustomfield24'] = nil" }

            
      }
else  if [message] =~ "XICONNECT" and [message] =~ "SSLVPN HTTPREQUEST"
        {

                grok {
match => ["message", "%{MONTH} %{MONTHDAY} %{TIME} %{IP} %{DATE_US:netscalerdate}: %{TIME:netscalertime} GMT %{SYSLOGHOST:servername} %{DATA:txncustomfield1} : %{DATA:domainname} %{POSINT:txncustomfield2} %{INT} : %{GREEDYDATA:result}"]
                    }
            mutate {
                    gsub => ["result",":","-"]
                    gsub => ["result",": ","-"]
                    #gsub => ["result","VserverServiceIP","Vserver"]
                    add_field => ["eventdate","%{netscalerdate} %{netscalertime}"]
                    }
           kv
             {
                 source  => "result"
                 value_split => " "
                 field_split => "-"
             }

             mutate{

                       
                                     
                             add_field => ["txncustomfield6","%{Vserver}"]
                             add_field => ["netstr1","%{Context}"]
                             add_field => ["objecttype","%{Context}"]     
                             rename => {"17" => "netstr2"}
                             split => ["netstr2"," "]
                             add_field => ["eventdesc","%{[netstr2][1]}"]
                             add_field => ["objectfolder","%{[netstr2][2]}"]
                             add_field => ["txncustomfield17","%{Group(s)}"]
                               
                                          
                           }
			mutate {
				 split => ["netstr1","@"] 
				 add_field => ["employeeid","%{[netstr1][0]}"]
                                 add_field => ["ipaddress","%{[netstr1][1]}"]
				}
                              
                                ruby { code => "event['txncustomfield4'] = nil" }
				
				ruby { code => "event['txncustomfield5'] = nil" }
				ruby { code => "event['txncustomfield11'] = nil" }
				
				 ruby { code => "event['txncustomfield14'] = nil"} 
                                 ruby { code => "event['txncustomfield15'] = nil" }
                                 ruby { code => "event['txncustomfield16'] = nil" }
                                 ruby { code => "event['txncustomfield18'] = nil" }
				ruby { code => "event['txncustomfield8'] = nil" }
				ruby { code => "event['txncustomfield10'] = nil" }
				ruby { code => "event['txncustomfield9'] = nil" }
				ruby { code => "event['txncustomfield13'] = nil" }
				ruby { code => "event['txncustomfield12'] = nil" }
                                
                                


      }

else  if [message] =~ "XICONNECT" and [message] =~ "SSLLOG SSL_HANDSHAKE" 
        {

                grok {
match => ["message", "%{MONTH} %{MONTHDAY} %{TIME} %{IP} %{DATE_US:netscalerdate}: %{TIME:netscalertime} GMT %{SYSLOGHOST:servername} %{DATA:txncustomfield1} : %{DATA:domainname} %{POSINT:txncustomfield2} %{INT} : %{GREEDYDATA:result}"]
                    }
            mutate {
                    gsub => ["result",":","-"]
                    gsub => ["result",": ","-"]
                    gsub => ["result","VserverServiceIP","Vserver"]
                    add_field => ["eventdate","%{netscalerdate} %{netscalertime}"]
                    }
           kv
             {
                 source  => "result"
                 value_split => " "
                 field_split => "-"
             }

             mutate{


                        add_field => ["ipaddress","%{ClientIP}"]
                        add_field => ["txncustomfield19","%{SPCBId}"]


                           add_field => ["txncustomfield20","%{ClientPort}"]
                           add_field => ["txncustomfield6","%{Vserver}"]
                           add_field => ["txncustomfield21","%{VserverServicePort}"]
                           add_field => ["txncustomfield22","%{ClientVersion}"]
                           add_field => ["txncustomfield23","%{CipherSuite}"]
                           add_field => ["txncustomfield24","%{Session}"]

                   }
                                ruby { code => "event['txncustomfield4'] = nil" }
                                ruby { code => "event['employeeid'] = nil" }
                                ruby { code => "event['txncustomfield5'] = nil" }
                                ruby { code => "event['txncustomfield11'] = nil" }

                                ruby { code => "event['txncustomfield14'] = nil"}
                                 ruby { code => "event['txncustomfield15'] = nil" }
                                  ruby { code => "event['txncustomfield16'] = nil" }
                                  ruby { code => "event['txncustomfield17'] = nil" }
                                   ruby { code => "event['txncustomfield18'] = nil" }
                                ruby { code => "event['txncustomfield8'] = nil" }
                                ruby { code => "event['txncustomfield10'] = nil" }
                                ruby { code => "event['txncustomfield9'] = nil" }
                                ruby { code => "event['txncustomfield13'] = nil" }
                                ruby { code => "event['txncustomfield12'] = nil" }
                               ruby { code => "event['objecttype'] = nil" }
   }

else  if [message] =~ "XICONNECT" and [message] =~ "ICA "
        {

                grok {
match => ["message", "%{MONTH} %{MONTHDAY} %{TIME} %{IP} %{DATE_US:netscalerdate}: %{TIME:netscalertime} GMT %{SYSLOGHOST:servername} %{DATA:txncustomfield1} : %{DATA:domainname} %{POSINT:txncustomfield2} %{INT} : %{GREEDYDATA:result}"]
                    }
            mutate {
                    gsub => ["result",":","-"]
                    gsub => ["result",": ","-"]
                    add_field => ["eventdate","%{netscalerdate} %{netscalertime}"]
                    }
           kv
             {
                 source  => "result"
                 value_split => " "
                 field_split => "-"
             }
	mutate {
                 add_field => ["txncustomfield20","%{session_guid}"]
                           add_field => ["txncustomfield6","%{device_serial_number}"]
                           add_field => ["txncustomfield21","%{flags}"]

                  }
                                ruby { code => "event['txncustomfield4'] = nil" }
                                ruby { code => "event['employeeid'] = nil" }
                                ruby { code => "event['txncustomfield5'] = nil" }
                                ruby { code => "event['txncustomfield11'] = nil" }
                                ruby { code => "event['txncustomfield22'] = nil" }
                                ruby { code => "event['txncustomfield23'] = nil" }
                                ruby { code => "event['txncustomfield24'] = nil" }
                                ruby { code => "event['txncustomfield25'] = nil"}
                                 ruby { code => "event['txncustomfield15'] = nil" }
                                  ruby { code => "event['txncustomfield16'] = nil" }
                                  ruby { code => "event['txncustomfield17'] = nil" }
                                   ruby { code => "event['txncustomfield18'] = nil" }
                                ruby { code => "event['txncustomfield8'] = nil" }
                                ruby { code => "event['txncustomfield10'] = nil" }
                                ruby { code => "event['txncustomfield9'] = nil" }
                                ruby { code => "event['txncustomfield26'] = nil" }
                                ruby { code => "event['txncustomfield12'] = nil" }
                                ruby { code => "event['objecttype'] = nil" }

      }
if [eventdesc] =~ "%{"
{
ruby { code => "event['eventdesc'] = nil" }
}
if [txncustomfield6] =~ "%{"
{
ruby { code => "event['txncustomfield6'] = nil" }
}
if [txncustomfield20] =~ "%{"
{
ruby { code => "event['txncustomfield20'] = nil" }
}
if [txncustomfield21] =~ "%{"
{
ruby { code => "event['txncustomfield21'] = nil" }
}
if [txncustomfield24] =~ "%{"
{
ruby { code => "event['txncustomfield24'] = nil" }
}
}
output {
	if [message] =~ "XICONNECT" {
	csv {
		fields => ["eventdate","employeeid","ipaddress","servername","eventdesc","domainname","txncustomfield1","txncustomfield2","txncustomfield4","txncustomfield5","txncustomfield6","txncustomfield7","txncustomfield8","txncustomfield9","txncustomfield10","txncustomfield11","txncustomfield12","txncustomfield15","txncustomfield16","txncustomfield17","txncustomfield18","txncustomfield20","txncustomfield21","txncustomfield22","txncustomfield23","txncustomfield24"]
		path => "/opt/gra/activitylogmgr/logs/out/syslog/citrix_xi_%{+YYYY-MM-dd-HH}.csv"
	    }
}
#stdout {
#	codec => "rubydebug"
#}	

}


