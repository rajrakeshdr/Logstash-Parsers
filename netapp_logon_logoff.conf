input{
#stdin{}
#udp {
#	type => "syslog"
#	port => 6000
#}
file {
        path => "/home/syslog_final/NetApp_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}
filter
{
	mutate {
                gsub => ["message","\"",""]
		gsub => ["message","[(,)]",""]
                }

	 if [message] =~ "NetApp:" and [message] =~ "Logon Failure: Reason: Account logon time restriction" or [message] =~ "Logon Failure: Reason: Account currently disabled" or [message] =~ "Logon Failure: Reason: User account has expired" or [message] =~ "Logon Failure: Reason: User cannot log on to this computer" or [message] =~ "Logon Failure: Reason: User not granted logon type here" or [message] =~ "Logon Failure: Reason: The specified account's password has expired" or [message] =~ "Logon Failure: Reason: NetLogon component is not active"  or [message] =~ "Logon Failure: Reason: Account locked out" or [message] =~ "Logon Failure: Reason: An error occurred during logon" or [message] =~ "Logon Failure: Reason: Unknown user name or bad password"
        {
	   mutate {
		  gsub => ["message","User Name:", ". User Name:"]
		}
           grok {
             match => ["message","%{DATA}: %{DATA:ipdata} \[%{WORD:module}\] %{WORD} %{MONTH:netappmonth} %{MONTHDAY:netappday} %{TIME:netapp_time} %{YEAR:netappyear}: %{DATA} - %{DATA:eventdesc}: %{WORD}: %{DATA:txncustomfield24} . %{GREEDYDATA:netapp_msg}"]

                }	
        mutate {
        add_field => ["netapp_date", "%{netappyear}-%{netappmonth}-%{netappday} %{netapp_time}"]
	split => ["ipdata",":"]
	gsub => ["netapp_msg","User Name:","UserName:"]
	gsub => ["netapp_msg","Caller . UserName:", "CallerName:"]
	gsub => ["netapp_msg","Caller Domain:", "CallerDomain:"]
        gsub => ["netapp_msg","Logon ID:", "LogonID:"]
        gsub => ["netapp_msg","Logon Type:", "LogonType:"]
        gsub => ["netapp_msg","Logon Process:", "LogonProcess:"]
        gsub => ["netapp_msg","Workstation Name:", "WorkstationName:"]
        gsub => ["netapp_msg","Logon GUID:", "LogonGUID:"]
        gsub => ["netapp_msg","Caller LogonID:", "CallerLogonID:"]
        gsub => ["netapp_msg","Caller Process ID:", "CallerProcessID:"]
        gsub => ["netapp_msg","Transited Services:", "TransitedServices:"]
        gsub => ["netapp_msg","Source Network Address:", "SourceNetworkAddress:"]
        gsub => ["netapp_msg","Source Port:", "SourcePort:"]
        gsub => ["netapp_msg","Caller Process Name:", "CallerProcessName:"]

            }
         date {
                match => ["netapp_date", "YYYY-MMM-dd HH:mm:ss"]
                target => "eventDate"
             }
        date_formatter {
                source => "eventDate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
       			}
	kv {
	  source => "netapp_msg"
	  value_split => ":"
	  field_split => " "
	   }                
	mutate {
                add_field => ["ipaddress","%{[ipdata][1]}"]
		add_field => ["employeeid","%{UserName}"]
		add_field => ["domainname","%{Domain}"]
                add_field => ["txncustomfield5","%{LogonID}"]
                add_field => ["txncustomfield6","%{LogonType}"]
                add_field => ["txncustomfield7","%{LogonProcess}"]
                add_field => ["txncustomfield11","%{Package}"]
                add_field => ["machineid","%{WorkstationName}"]
                add_field => ["txncustomfield12","%{LogonGUID}"]
                add_field => ["txncustomfield16","%{CallerName}"]
                add_field => ["txncustomfield17","%{CallerDomain}"]
                add_field => ["txncustomfield18","%{CallerLogonID}"]
                add_field => ["txncustomfield19","%{CallerProcessID}"]
                add_field => ["txncustomfield20","%{TransitedServices}"]
                add_field => ["txncustomfield21","%{SourceNetworkAddress}"]
                add_field => ["txncustomfield22","%{SourcePort}"]
                add_field => ["txncustomfield23","%{CallerProcessName}"]
                }
		ruby { code => "event['txncustomfield5'] = nil" }
	if [txncustomfield12] =~ "%{LogonGUID}"
	{
		ruby { code => "event['txncustomfield12'] = nil" }
	}
}
	else if [message] =~ "NetApp:" and [message] =~ "Successful Network Logon:"
        {
	 grok {
             match => ["message","%{DATA}: %{DATA:ipdata} \[%{WORD:module}\] %{WORD} %{MONTH:netappmonth} %{MONTHDAY:netappday} %{TIME:netapp_time} %{YEAR:netappyear}: %{DATA} - %{DATA:eventdesc}: %{GREEDYDATA:netapp_msg}"]

                }
        mutate {
        add_field => ["netapp_date", "%{netappyear}-%{netappmonth}-%{netappday} %{netapp_time}"]
        split => ["ipdata",":"]
        gsub => ["netapp_msg","User Name:", "UserName:"]
        gsub => ["netapp_msg","Caller UserName:", "CallerName:"]
        gsub => ["netapp_msg","Caller Domain:", "CallerDomain:"]
        gsub => ["netapp_msg","Logon ID:", "LogonID:"]
        gsub => ["netapp_msg","Logon Type:", "LogonType:"]
        gsub => ["netapp_msg","Logon Process:", "LogonProcess:"]
        gsub => ["netapp_msg","Workstation Name:", "WorkstationName:"]
        gsub => ["netapp_msg","Logon GUID:", "LogonGUID:"]
        gsub => ["netapp_msg","Caller LogonID:", "CallerLogonID:"]
        gsub => ["netapp_msg","Caller Process ID:", "CallerProcessID:"]
        gsub => ["netapp_msg","Transited Services:", "TransitedServices:"]
        gsub => ["netapp_msg","Source Network Address:", "SourceNetworkAddress:"]
        gsub => ["netapp_msg","Source Port:", "SourcePort:"]
        gsub => ["netapp_msg","Caller Process Name:", "CallerProcessName:"]

            }
         date {
                match => ["netapp_date", "YYYY-MMM-dd HH:mm:ss"]
                target => "eventDate"
             }
        date_formatter {
                source => "eventDate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                        }
        kv {
          source => "netapp_msg"
          value_split => ":"
          field_split => " "
           }
	 mutate {
                add_field => ["ipaddress","%{[ipdata][1]}"]
                add_field => ["employeeid","%{UserName}"]
                add_field => ["domainname","%{Domain}"]
                add_field => ["txncustomfield6","%{LogonType}"]
                add_field => ["txncustomfield7","%{LogonProcess}"]
                add_field => ["txncustomfield11","%{Package}"]
                add_field => ["machineid","%{WorkstationName}"]
                add_field => ["txncustomfield16","%{CallerName}"]
                add_field => ["txncustomfield17","%{CallerDomain}"]
		add_field => ["txncustomfield18","%{CallerLogonID}"]
                add_field => ["txncustomfield19","%{CallerProcessID}"]
                add_field => ["txncustomfield20","%{TransitedServices}"]
                add_field => ["txncustomfield21","%{SourceNetworkAddress}"]
                add_field => ["txncustomfield22","%{SourcePort}"]
                add_field => ["txncustomfield23","%{CallerProcessName}"]
                }
		ruby { code => "event['txncustomfield24'] = nil" }
	}

    else if [message] =~ "NetApp:" and [message] =~ "User Logoff:"
	{

	grok {
             match => ["message","%{DATA}: %{DATA:ipdata} \[%{WORD:module}\] %{WORD} %{MONTH:netappmonth} %{MONTHDAY:netappday} %{TIME:netapp_time} %{YEAR:netappyear}: %{DATA} - %{DATA:eventdesc}: %{GREEDYDATA:netapp_msg}"]

                }
        mutate {
        add_field => ["netapp_date", "%{netappyear}-%{netappmonth}-%{netappday} %{netapp_time}"]
        split => ["ipdata",":"]
        gsub => ["netapp_msg","User Name:", "UserName:"]
        gsub => ["netapp_msg","Caller UserName:", "CallerName:"]
        gsub => ["netapp_msg","Caller Domain:", "CallerDomain:"]
        gsub => ["netapp_msg","Logon ID:", "LogonID:"]
        gsub => ["netapp_msg","Logon Type:", "LogonType:"]
        gsub => ["netapp_msg","Logon Process:", "LogonProcess:"]
        gsub => ["netapp_msg","Workstation Name:", "WorkstationName:"]
        gsub => ["netapp_msg","Logon GUID:", "LogonGUID:"]
        gsub => ["netapp_msg","Caller LogonID:", "CallerLogonID:"]
        gsub => ["netapp_msg","Caller Process ID:", "CallerProcessID:"]
        gsub => ["netapp_msg","Transited Services:", "TransitedServices:"]
        gsub => ["netapp_msg","Source Network Address:", "SourceNetworkAddress:"]
        gsub => ["netapp_msg","Source Port:", "SourcePort:"]
        gsub => ["netapp_msg","Caller Process Name:", "CallerProcessName:"]

            }
         date {
                match => ["netapp_date", "YYYY-MMM-dd HH:mm:ss"]
                target => "eventDate"
             }
        date_formatter {
                source => "eventDate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                        }
        kv {
          source => "netapp_msg"
          value_split => ":"
          field_split => " "
           }

	mutate {
                add_field => ["ipaddress","%{[ipdata][1]}"]
                add_field => ["employeeid","%{UserName}"]
                add_field => ["domainname","%{Domain}"]
                add_field => ["txncustomfield6","%{LogonType}"]
                }
		ruby { code => "event['txncustomfield7'] = nil" }
		ruby { code => "event['txncustomfield11'] = nil" }
		ruby { code => "event['machineid'] = nil" }
		ruby { code => "event['txncustomfield12'] = nil" }
		ruby { code => "event['txncustomfield16'] = nil" }
		ruby { code => "event['txncustomfield17'] = nil" }
		ruby { code => "event['txncustomfield18'] = nil" }
		ruby { code => "event['txncustomfield19'] = nil" }
		ruby { code => "event['txncustomfield20'] = nil" }
		ruby { code => "event['txncustomfield21'] = nil" }
		ruby { code => "event['txncustomfield22'] = nil" }
		ruby { code => "event['txncustomfield23'] = nil" }
		ruby { code => "event['txncustomfield24'] = nil" }
                ruby { code => "event['txncustomfield5'] = nil" }
                ruby { code => "event['txncustomfield12'] = nil" }
                ruby { code => "event['txncustomfield18'] = nil" }
	}
	else {
	drop {}
	}

}
output {
	if [message] =~ "NetApp:" and [message] =~ "Logon Failure: Reason: Unknown user name or bad password" or [message] =~ "Logon Failure: Reason: Account logon time restriction" or [message] =~ "Logon Failure: Reason: Account currently disabled" or [message] =~ "Logon Failure: Reason: User account has expired" or [message] =~ "Logon Failure: Reason: User cannot log on to this computer" or [message] =~ "Logon Failure: Reason: User not granted logon type here" or [message] =~ "Logon Failure: Reason: The specified account's password has expired" or [message] =~ "Logon Failure: Reason: NetLogon component is not active" or [message] =~ "Logon Failure: Reason: An error occurred during logon" or [message] =~ "User Logoff:" or [message] =~ "Logon Failure: Reason: Account locked out" or [message] =~ "Successful Network Logon:"
{
	csv {
		fields => ["eventdate","txncustomfield24","employeeid","eventdesc","domainname","ipaddress","txncustomfield5","txncustomfield6","txncustomfield7","txncustomfield11","machineid","txncustomfield12","txncustomfield16","txncustomfield17","txncustomfield18","txncustomfield19","txncustomfield20","txncustomfield21","txncustomfield22","txncustomfield23"]
		path => "/opt/gra/activitylogmgr/logs/out/syslog/Netapp_logon_logoff%{+YYYY-MM-dd-HH}.csv"
	    }
	}
#stdout {
#	codec => "rubydebug"
#	}
}
