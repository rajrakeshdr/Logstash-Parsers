input{
#       stdin{}
#udp {
#       type => "syslog"
#       port => 6000
#}
file {
        path => "/home/syslog_final/chkpnt_snx_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}
filter {
		if [message] =~ "%CHKPNT" and [message] !~ "time=" and [message] =~ "block" or [message] =~ "redirect"
        {
           grok {
                 match => ["message"," %{TIME:chksnx_time} %{DATA}: %{GREEDYDATA:chksnx_msg}"]

                }
        csv {
                source => "chksnx_msg"
                autogenerate_column_names => "true"
                separator => ","
                }
		mutate {
		split => ["column22","("]
                add_field => ["empid","%{[column22][1]}"]
		}	
		mutate {
                                gsub => ["empid","\)",""]
                                }
if [empid] =~ "%{"
{
ruby { code => "event['empid'] = nil" }
}
        }
	       else if [message] =~ "%CHKPNT" and [message] =~ "time=" and [message] == "user=" and [message] =~ "update" or [message] =~ "redirect" or [message] =~ "allow" or [message] =~ "block" or [message] =~ "logout"
        {
           grok {
                 match => ["message"," %{TIME:chksnx_time} %{DATA}: %{GREEDYDATA:chksnx_msg}"]

                }
        kv {
                source => "chksnx_msg"
                field_split => ","
                }
				mutate {
				rename => { "time" => "column35" }
                        rename => { "action" => "column1" }
                        rename => { "orig" => "column2" }
                        rename => { "i/f_dir" => "column3" }
                        rename => { "i/f_name" => "column4" }
                        rename => { "src" => "column5" }
                        rename => { "s_port" => "column6" }
                        rename => { "dst" => "column7" }
                        rename => { "d_port" => "column8" }
                        rename => { "service" => "column9" }
                        rename => { "proto" => "column10" }
			split => ["user","("]
                        add_field => ["column22","%{[user][1]}"]
			add_field => ["column30",""]
                        rename => { "has_accounting" => "column36" }
                        rename => { "product" => "column37" }					
        }
		mutate {
				gsub => ["column22","\)",""]
				}
if [column22] =~ "%{"
{
ruby { code => "event['column22'] = nil" }
}	
if [message] !~ "user=" {
drop{}
}
}        
        }
output {
        if [message] =~ "%CHKPNT" and [message] !~ "time=" and [message] =~ "block" or [message] =~ "redirect"
       {
        csv {
                fields => ["column1","column2","column3","column4","column5","column6","column7","column8","column9","column10","empid","column30","column35","column36","column37"]
        
                 path => "/opt/gra/activitylogmgr/logs/out/syslog/chkpnt_SNX_%{+YYYY-MM-dd-HH}.csv"
   }
   }
       else if [message] =~ "%CHKPNT" and [message] =~ "time=" and [message] == "user=" and [message] =~ "update" or [message] =~ "redirect" or [message] =~ "allow" or [message] =~ "block" or [message] =~ "logout"
       {
        csv {
                fields => ["column1","column2","column3","column4","column5","column6","column7","column8","column9","column10","column22","column30","column35","column36","column37"]
        
                 path => "/opt/gra/activitylogmgr/logs/out/syslog/chkpnt_SNX_%{+YYYY-MM-dd-HH}.csv"
   }
   }   
#stdout {
 #      codec => "rubydebug"
  #     }
}

