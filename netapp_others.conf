input{
#        stdin{}
#udp {
#       type => "syslog"
#       port => 6000
#}
file {
        path => "/home/syslog_final/NetApp_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}
filter
{
        if [message] =~ "NetApp:" and [message] =~ "Successful Network Logon" or [message] =~ "User Logoff" 
        {
        drop{}
        }
        mutate {
                gsub => ["message","\"",""]
               gsub => ["message","[(,)]",""]
                }
        if [message] =~ "NetApp" and [message] =~ "Security 516"
        {
           grok {
                 match => ["message","%{DATA}: %{DATA:ipdata} \[%{WORD:module}\] %{WORD} %{MONTH:netappmonth} %{MONTHDAY:netappday} %{TIME:netapp_time} %{YEAR:netappyear}: %{DATA} - %{GREEDYDATA:eventdesc}"]

                }
        mutate {
        add_field => ["netapp_date", "%{netappyear}-%{netappmonth}-%{netappday} %{netapp_time}"]
        split => ["ipdata",":"]
                gsub => ["netapp_msg","Object Server:", "ObjectServer:"]
                gsub => ["netapp_msg","Object Type:", "ObjectType:"]
                gsub => ["netapp_msg","Object Name:", "ObjectName:"]
                gsub => ["netapp_msg","Handle ID:", "HandleID:"]
                gsub => ["netapp_msg","Process ID:", "ProcessID:"]
                gsub => ["netapp_msg","Image File Name:", "ImageFileName:"]
                gsub => ["netapp_msg","Primary User Name:", "PrimaryUserName:"]
                gsub => ["netapp_msg","Primary Logon ID:", "PrimaryLogonID:"]
                gsub => ["netapp_msg","Primary Domain:", "PrimaryDomain:"]
                gsub => ["netapp_msg","Client User Name:", "ClientUserName:"]
                gsub => ["netapp_msg","Client Domain:", "ClientDomain:"]
                gsub => ["netapp_msg","Client Logon ID:", "ClientLogonID:"]
                gsub => ["netapp_msg","Restricted Sid Count:", "RestrictedSidCount:"]
                gsub => ["netapp_msg","Access Mask:", "AccessMask:"]
            }
        }
	else if [message] =~ "NetApp:" and [message] =~ "Security 528" or [message] =~ "Security 529" or [message] =~ "Security 530" or [message] =~ "Security 531" or [message] =~ "Security 532" or [message] =~ "Security 533" or [message] =~ "Security 534" or [message] =~ "Security 535" or [message] =~ "Security 536" or [message] =~ "Security 537" or [message] =~ "Security 538" or [message] =~ "Security 539" or [message] =~ "Security 540" {
	drop {}
	}
        else if [message] =~ "NetApp:" and [message] =~ "Security 630" or [message] =~ "Security 636" or [message] =~ "Security 637" or [message] =~ "Security 624" or [message] =~ "Security 635" or [message] =~ "Security 638" 
        {
        mutate{
                gsub => ["message","[\\]",","]
                }
        grok {
                match => ["message","%{DATA}: %{DATA:ipdata} \[%{WORD:module}\] %{WORD} %{MONTH:netappmonth} %{MONTHDAY:netappday} %{TIME:netapp_time} %{YEAR:netappyear}: %{DATA} - %{DATA:eventdesc}: %{GREEDYDATA:netapp_msg}"]
                }
        mutate {
        add_field => ["netapp_date", "%{netappyear}-%{netappmonth}-%{netappday} %{netapp_time}"]
        split => ["ipdata",":"]
        gsub => ["netapp_msg","Target Account Name:", "TargetAccountName:"]
                gsub => ["netapp_msg","Target Domain:", "TargetDomain:"]
                gsub => ["netapp_msg","Target Account ID:", "TargetAccountID:"]
                gsub => ["netapp_msg","Caller User Name:", "CallerUserName:"]
                gsub => ["netapp_msg","Caller Domain:", "CallerDomain:"]
                gsub => ["netapp_msg","Caller Logon ID:", "CallerLogonID:"]
		gsub => ["netapp_msg","([\w]+:)","!\1"]
                }
                date {
                match => ["netapp_date", "YYYY-MMM-dd HH:mm:ss"]
                target => "eventDate"
             }
        date_formatter {
                source => "eventDate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                       }
        kv {
                source => "netapp_msg"
                value_split => ":"
                field_split => "!"
           }
        mutate {
                add_field => ["ipaddress","%{[ipdata][1]}"]
                split => ["CallerUserName",","]
                add_field => ["employeeid","%{[CallerUserName][1]}"]
                add_field => ["domainname","%{CallerDomain}"]
                add_field => ["txncustomfield5","%{CallerLogonID}"]
                add_field => ["txncustomfield12","%{TargetAccountName}"]
                add_field => ["txncustomfield8","%{TargetDomain}"]
                add_field => ["txncustomfield9","%{TargetAccountID}"]
                add_field => ["txncustomfield23","%{Privileges}"]
                }
ruby { code => "event['txncustomfield6'] = nil" }
ruby { code => "event['txncustomfield7'] = nil" }
ruby { code => "event['txncustomfield11'] = nil" }
ruby { code => "event['machineid'] = nil" }
ruby { code => "event['txncustomfield16'] = nil" }
ruby { code => "event['txncustomfield17'] = nil" }
ruby { code => "event['txncustomfield18'] = nil" }
ruby { code => "event['txncustomfield19'] = nil" }
ruby { code => "event['txncustomfield20'] = nil" }
ruby { code => "event['txncustomfield21'] = nil" }
ruby { code => "event['txncustomfield22'] = nil" }
ruby { code => "event['txncustomfield24'] = nil" }
ruby { code => "event['txncustomfield25'] = nil" }

}
         else if [message] =~ "NetApp:" and [message] !~ "Security 630" or [message] !~ "Security 636" or [message] !~ "Security 637" or [message] !~ "Security 624" or [message] !~ "Security 635" or [message] !~ "Security 638"
        {
           grok {
                 match => ["message","%{DATA}: %{DATA:ipdata} \[%{WORD:module}\] %{WORD} %{MONTH:netappmonth} %{MONTHDAY:netappday} %{TIME:netapp_time} %{YEAR:netappyear}: %{DATA:filterdata} - %{DATA:eventdesc}: %{GREEDYDATA:netapp_msg}"]

                }
        mutate {
        add_field => ["netapp_date", "%{netappyear}-%{netappmonth}-%{netappday} %{netapp_time}"]
        split => ["ipdata",":"]
                gsub => ["netapp_msg","Object Server:", "ObjectServer:"]
                gsub => ["netapp_msg","Object Type:", "ObjectType:"]
                gsub => ["netapp_msg","Object Name:", "ObjectName:"]
                gsub => ["netapp_msg","Handle ID:", "HandleID:"]
                gsub => ["netapp_msg","Process ID:", "ProcessID:"]
                gsub => ["netapp_msg","Image File Name:", "ImageFileName:"]
                gsub => ["netapp_msg","Primary User Name:", "PrimaryUserName:"]
                gsub => ["netapp_msg","Primary Logon ID:", "PrimaryLogonID:"]
                gsub => ["netapp_msg","Primary Domain:", "PrimaryDomain:"]
                gsub => ["netapp_msg","Client User Name:", "ClientUserName:"]
                gsub => ["netapp_msg","Client Domain:", "ClientDomain:"]
                gsub => ["netapp_msg","Client Logon ID:", "ClientLogonID:"]
                gsub => ["netapp_msg","Restricted Sid Count:", "RestrictedSidCount:"]
                gsub => ["netapp_msg","Access Mask:", "AccessMask:"]
		gsub => ["netapp_msg","([\w]+:)","!\1"]
            }
         date {
                match => ["netapp_date", "YYYY-MMM-dd HH:mm:ss"]
                target => "eventDate"
             }
        date_formatter {
                source => "eventDate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                       }
        kv {
                source => "netapp_msg"
                value_split => ":"
                field_split => "!"
           }

        mutate {
                add_field => ["ipaddress","%{[ipdata][1]}"]
                add_field => ["employeeid","%{PrimaryUserName}"]
                add_field => ["domainname","%{PrimaryDomain}"]
                add_field => ["txncustomfield6","%{ObjectServer}"]
                add_field => ["txncustomfield7","%{ObjectType}"]
                add_field => ["txncustomfield11","%{ObjectName}"]
                add_field => ["machineid","%{HandleID}"]
                add_field => ["txncustomfield16","%{ProcessID}"]
                add_field => ["txncustomfield17","%{ImageFileName}"]
                add_field => ["txncustomfield18","%{PrimaryLogonID}"]
                add_field => ["txncustomfield19","%{ClientUserName}"]
                add_field => ["txncustomfield20","%{ClientDomain}"]
                add_field => ["txncustomfield21","%{ClientLogonID}"]
                add_field => ["txncustomfield22","%{Accesses}"]
                add_field => ["txncustomfield23","%{Privileges}"]
                add_field => ["txncustomfield24","%{RestrictedSidCount}"]
                add_field => ["txncustomfield25","%{AccessMask}"]
                }
ruby { code => "event['txncustomfield5'] = nil" }
ruby { code => "event['txncustomfield8'] = nil" }
ruby { code => "event['txncustomfield9'] = nil" }
ruby { code => "event['txncustomfield12'] = nil" }
}
if [message] =~ "NetApp:" and [message] =~ "Security 562"
{
ruby { code => "event['employeeid'] = nil" }
ruby { code => "event['domainname'] = nil" }
ruby { code => "event['txncustomfield7'] = nil" }
ruby { code => "event['txncustomfield11'] = nil" }
ruby { code => "event['txncustomfield18'] = nil" }
ruby { code => "event['txncustomfield19'] = nil" }
ruby { code => "event['txncustomfield20'] = nil" }
ruby { code => "event['txncustomfield21'] = nil" }
ruby { code => "event['txncustomfield22'] = nil" }
ruby { code => "event['txncustomfield23'] = nil" }
ruby { code => "event['txncustomfield24'] = nil" }
ruby { code => "event['txncustomfield25'] = nil" }
ruby { code => "event['txncustomfield5'] = nil" }
ruby { code => "event['txncustomfield8'] = nil" }
ruby { code => "event['txncustomfield9'] = nil" }
ruby { code => "event['txncustomfield12'] = nil" }
}
if [message] =~ "NetApp:" and [message] =~ "Security 563"
{
ruby { code => "event['txncustomfield17'] = nil" }
ruby { code => "event['txncustomfield24'] = nil" }
ruby { code => "event['txncustomfield5'] = nil" }
ruby { code => "event['txncustomfield8'] = nil" }
ruby { code => "event['txncustomfield9'] = nil" }
ruby { code => "event['txncustomfield12'] = nil" }
}
if [message] =~ "NetApp:" and [message] =~ "Security 567"
{
ruby { code => "event['txncustomfield23'] = nil" }
ruby { code => "event['txncustomfield24'] = nil" }
}
if "_grokparsefailure" in [tags] {
        drop {}                 }
}
output {
        if [message] =~ "NetApp" and [message] =~ "Security (516)" or [message] !~ "Security (528)" or [message] !~ "Security (529)" or [message] !~ "Security (530)" or [message] !~ "Security (531)" or [message] !~ "Security (532)" or [message] !~ "Security (533)" or [message] !~ "Security (534)" or [message] !~ "Security (535)" or [message] !~ "Security (536)" or [message] !~ "Security (537)" or [message] !~ "Security (538)" or [message] !~ "Security (539)" or [message] !~ "Security (540)"

       {
        csv {
                fields => ["eventdate","eventdesc","ipaddress","employeeid","domainname","txncustomfield6","txncustomfield7","txncustomfield11","machineid","txncustomfield16","txncustomfield17","txncustomfield18","txncustomfield19","txncustomfield20","txncustomfield21","txncustomfield22","txncustomfield23","txncustomfield24","txncustomfield25","txncustomfield5","txncustomfield8","txncustomfield9","txncustomfield12"]
                path => "/opt/gra/activitylogmgr/logs/out/syslog/Netapp_other_%{+YYYY-MM-dd-HH}.csv"
            }
        }
#stdout {
 #       codec => "rubydebug"
  #      }
}

