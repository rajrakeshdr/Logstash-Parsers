input
{
#       udp{
#               type => "Syslog"
#               port => 6000
#          }
#        stdin {}
file {
       path => "/home/syslog_final/Exchange_cas_2017*"
       type => ["file"]
       start_position => "beginning"
       }
}

filter
{
        if [message] =~ "%IIS-4-" and [message] =~ "s-ip" and [message] =~ "&DeviceId=" and [message] =~ "User=" and [message] !~ "\"Cmd="
        {
                grok
                {
                        match => [ "message", "%{DATA}: %{GREEDYDATA:ecassyslog_message}" ]
                }
                kv
                {
                        source => "ecassyslog_message"
                        field_split => ","
                }
        if [cs-username] =~ "-" {
                drop {}
                }
                mutate
                {
                        add_field => {"eventdate" => "%{date} %{time}"}
                        rename => { "s-ip" => "ipaddress" }
                        rename => { "cs-method" => "eventdesc" }
                        rename => { "cs-uri-stem" => "objectname" }
                        rename => { "cs-uri-query" => "txncustomfield6" }
			rename => { "s-port" => "txncustomfield7" }
                        rename => { "cs-username" => "ademployeeid" }
                        rename => { "c-ip" => "txncustomfield2" }
                        gsub => ["ademployeeid", "[\\]", "/"]
                        split => {"ademployeeid" => "/"}
                        add_field => {"employeeid" => "%{[ademployeeid][-1]}"}
			rename => { "cs(User-Agent)" => "txncustomfield8" }
			rename => { "cs(Referer)" => "txncustomfield9" }
			rename => { "sc-status" => "txncustomfield10" }
			rename => { "sc-substatus" => "txncustomfield11" }
			rename => { "sc-win32-status" => "txncustomfield12" }
			rename => { "time-taken" => "txncustomfield16" }
			rename => { "s-port" => "txncustomfield17" }
                }
		mutate 
		{
		split => ["txncustomfield6","&"]
		add_field => {"userid" => "%{[txncustomfield6][0]}"}
		add_field => {"deviceid" => "%{[txncustomfield6][1]}"}
		add_field => {"devicetype" => "%{[txncustomfield6][2]}"}
		}
		mutate
		{
		gsub => ["userid","User=",""]
                gsub => ["userid","itlinfosys%5C",""]
                gsub => ["deviceid","DeviceId=",""]
                gsub => ["devicetype","DeviceType=",""]
		}
	}
	else if [message] =~ "%IIS-4-" and [message] =~ "s-ip" and [message] =~ "&DeviceId=" and [message] =~ "User=" and [message] =~ "\"Cmd="
        {
                grok
                {
                        match => [ "message", "%{DATA}: %{GREEDYDATA:ecassyslog_message}" ]
                }
                kv
                {
                        source => "ecassyslog_message"
                        field_split => ","
                }
        if [cs-username] =~ "-" {
                drop {}
                }
                mutate
                {
                        add_field => {"eventdate" => "%{date} %{time}"}
                        rename => { "s-ip" => "ipaddress" }
                        rename => { "cs-method" => "eventdesc" }
                        rename => { "cs-uri-stem" => "objectname" }
                        rename => { "cs-uri-query" => "txncustomfield6" }
                        rename => { "s-port" => "txncustomfield7" }
                        rename => { "cs-username" => "ademployeeid" }
                        rename => { "c-ip" => "txncustomfield2" }
                        gsub => ["ademployeeid", "[\\]", "/"]
                        split => {"ademployeeid" => "/"}
                        add_field => {"employeeid" => "%{[ademployeeid][-1]}"}
                        rename => { "cs(User-Agent)" => "txncustomfield8" }
                        rename => { "cs(Referer)" => "txncustomfield9" }
                        rename => { "sc-status" => "txncustomfield10" }
                        rename => { "sc-substatus" => "txncustomfield11" }
                        rename => { "sc-win32-status" => "txncustomfield12" }
                        rename => { "time-taken" => "txncustomfield16" }
                        rename => { "s-port" => "txncustomfield17" }
                }
                mutate
                {
                split => ["txncustomfield6","&"]
                add_field => {"deviceid" => "%{[txncustomfield6][2]}"}
                add_field => {"devicetype" => "%{[txncustomfield6][3]}"}
                }
                mutate
                {
                gsub => ["deviceid","DeviceId=",""]
                gsub => ["devicetype","DeviceType=",""]
                }
           ruby { code => "event['userid'] = nil" }
        }

if "_grokparsefailure" in [tags] {
  drop { }
                                 }
}

output
{
        if [message] =~ "%IIS-4-" and [message] =~ "s-ip" and [message] =~ "&DeviceId="
        {
                csv
                {
                        fields =>["eventdate","ipaddress","eventdesc","objectname","userid","deviceid","devicetype","txncustomfield7","employeeid","txncustomfield2","txncustomfield8","txncustomfield9","txncustomfield10","txncustomfield11","txncustomfield12","txncustomfield16","txncustomfield17"]
                        path => "/opt/gra/activitylogmgr/logs/out/syslog/Exchangecas_%{+YYYY-MM-dd-HH}.csv"
                }
        }
#stdout {
 #       codec => rubydebug
  #      }
}
