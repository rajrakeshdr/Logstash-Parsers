input {
#stdin{}
file {
       path => "/home/syslog_final/Fireeye_2017*"
       type => ["file"]
       start_position => "beginning"
       }
}
filter
{
if [message] =~ "EVFIREEYEHX" and [message] =~ "CEF:0"
{
	mutate {
         # Saved the original message into a temporary field
         add_field => { "tmp_message" => "%{message}" }
         # splits message on the "|"  and has index numbers
         split => ["message", "|"]
         # generate fields for the CEF header
         add_field => { "cef_version" => "%{message[0]}" }
         add_field => { "cef_device_vendor" => "%{message[1]}" }
         add_field => { "cef_device_product" => "%{message[2]}" }
         add_field => { "cef_device_version" => "%{message[3]}" }
         add_field => { "cef_sig_id" => "%{message[4]}" }
         add_field => { "cef_sig_name" => "%{message[5]}" }
         add_field => { "cef_sig_severity" => "%{message[6]}" }

         gsub => [  "message", "([\w\"\,\/:_\~\.]+=)",",!\1" ]
	 gsub => ["message"," ,!",",!"]
        }

        # Parse the message with field=value formats
        kv {
         field_split => ",!"
         trimkey => "<>\[\],"
         trim => "<>\[\],"
         }     
		mutate{
                                add_field => ["fireDate","%{rt}"]
                                add_field => ["txncustomfield1","%{dvchost}"]
                                add_field => ["txncustomfield2","%{categoryDeviceGroup}"]
                                add_field => ["txncustomfield3","%{categoryDeviceType}"]
                                add_field => ["txncustomfield4","%{categoryObject}"]
	                        add_field => ["txncustomfield5","%{cs1Label}"]
                                add_field => ["txncustomfield6","%{cs1}"]
                                add_field => ["txncustomfield7","%{dst}"]
                                add_field => ["txncustomfield8","%{dmac}"]
                                add_field => ["txncustomfield9","%{dhost}"]
                                add_field => ["txncustomfield10","%{dntdom}"]
                                add_field => ["txncustomfield11","%{deviceCustomDate1Label}"]
                                add_field => ["txncustomfield12","%{deviceCustomDate1}"]
                                add_field => ["txncustomfield13","%{cs2Label}"]
                                add_field => ["txncustomfield14","%{cs2}"]
                                add_field => ["txncustomfield15","%{cs5Label}"]
                                add_field => ["txncustomfield16","%{cs5}"]
                                add_field => ["txncustomfield17","%{cs6Label}"]
                                add_field => ["txncustomfield18","%{cs6}"]
                                add_field => ["txncustomfield19","%{externalId}"]
                                add_field => ["txncustomfield20","%{start}"]
                                add_field => ["txncustomfield21","%{categoryOutcome}"]
                                add_field => ["txncustomfield22","%{categorySignificance}"]
                                add_field => ["txncustomfield23","%{categoryBehavior}"]
                                add_field => ["txncustomfield24","%{categoryTechnique}"]
                                add_field => ["txncustomfield25","%{act}"]
                                add_field => ["txncustomfield26","%{msg}"]
                                add_field => ["txncustomfield27","%{categoryTupleDescription}"]
                                add_field => ["txncustomfield28","%{cs4Label}"]
                                add_field => ["txncustomfield29","%{cs4}"]
}
	mutate{
		gsub => ["fireDate",".{4}$",""]
		}
        date {
                match => ["fireDate", "MMM dd YYYY HH:mm:ss"]
                target => "eventDate"
             }
        date_formatter {
                source => "eventDate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                       }	
        mutate {
        # Revert original message and remove temporary field
        replace => { "message" => "%{tmp_message}" }
        remove_field => [ "tmp_message" ]
              }
}
if [txncustomfield29] =~ "%{"
{
ruby { code => "event['txncustomfield29'] = nil" }
}
if [txncustomfield19] =~ "%{"
{
ruby { code => "event['txncustomfield19'] = nil" }
}
if [txncustomfield7] =~ "%{"
{
ruby { code => "event['txncustomfield7'] = nil" }
}
if [txncustomfield8] =~ "%{"
{
ruby { code => "event['txncustomfield8'] = nil" }
}
if [txncustomfield9] =~ "%{"
{
ruby { code => "event['txncustomfield9'] = nil" }
}
if [txncustomfield10] =~ "%{"
{
ruby { code => "event['txncustomfield10'] = nil" }
}
if [txncustomfield12] =~ "%{"
{
ruby { code => "event['txncustomfield12'] = nil" }
}
if [txncustomfield16] =~ "%{"
{
ruby { code => "event['txncustomfield16'] = nil" }
}
if [txncustomfield18] =~ "%{"
{
ruby { code => "event['txncustomfield18'] = nil" }
}
if [txncustomfield20] =~ "%{"
{
ruby { code => "event['txncustomfield20'] = nil" }
}
if [txncustomfield24] =~ "%{"
{
ruby { code => "event['txncustomfield24'] = nil" }
}
}
output
{
if [message] =~ "EVFIREEYEHX" and [message] =~ "CEF:0"
{
		csv
               	  {
                  fields =>["cef_device_vendor","cef_sig_name","eventdate","txncustomfield1","txncustomfield2","txncustomfield3","txncustomfield4","txncustomfield6","txncustomfield7","txncustomfield8","txncustomfield9","txncustomfield10","txncustomfield12","txncustomfield16","txncustomfield18","txncustomfield19","txncustomfield20","txncustomfield21","txncustomfield22","txncustomfield23","txncustomfield24","txncustomfield25","txncustomfield26","txncustomfield27","txncustomfield29"]
		   path => "/opt/gra/activitylogmgr/logs/out/syslog/FireEye_%{+YYYY-MM-dd-HH}.csv"
}
}
#    stdout {
 #          codec => rubydebug
  #         }
}
