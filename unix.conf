input
{
#stdin{}
file {
        path => "/home/syslog_final/unix_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}
filter 
{
	mutate {
	  gsub => ["message","  "," "]
	  gsub => ["message","[(]",""]
	  gsub => ["message","[)]",""]
	  gsub => ["message","[)']",""]
	  gsub => ["message","[=']","="]
	  gsub => ["message","\"",""]
	  gsub => ["message","[?,]","[?]"]
	  gsub => ["message"," : "," "]
	  gsub => ["message",": user"," user"]
	  gsub => ["message","PAM:","PAM"]
	  gsub => ["message","exe=/usr/sbin/crond",""]
	       }
	if [message] =~ "pam_unix" or [message] =~ "pam_systemd" and [message] =~ "crond" or [message] =~ "CROND"
	 {
		grok {
			match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{DATA:servername} %{WORD}\[%{NUMBER:num}\]: %{DATA:eventtype}: %{GREEDYDATA:unixdata}"]
		     }
	  mutate {
		   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
		 split => ["unixdata"," "]
		add_field => ["eventdesc","%{[unixdata][0]} %{[unixdata][1]}"]
		add_field => ["employeeid","%{[unixdata][4]}"]
		add_field => ["uuid","%{[unixdata][6]}"]	
	}
	  date {
		match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
	        target => "Eventdate"
		}
	 date_formatter {
		source => "Eventdate"
		pattern => "YYYY-MM-dd HH:mm:ss"
		target => "eventdate"
		       }
	}
	else if [message] !~ "pam_unix" and [message] =~ "crond" and [message] =~ "sendmail"
	{
		 grok {
                        match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{WORD:servername} %{WORD}: %{WORD:eventtype}: %{WORD}: %{DATA:objecttype}: %{GREEDYDATA:eventdesc}"]
                     }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
		}
          date {
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                       }
	}
	else if [message] =~ "crond" and [message] =~ "info" and [message] =~ "root" and [message] !~ "pam _unix" and [message] !~ "pam_systemd" and [message] !~ "sendmail" {
	  grok {
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{IP:servername} %{WORD}\[%{NUMBER:num}\]: %{GREEDYDATA:unixdata}"]
                 }  
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 split => ["unixdata"," "]
		} 
          date {
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                       }
	}

	else if [message] =~ "audispd" and [message] =~ "type=LOGIN" and [message] !~ "USER_ACCT" and [message] !~ "CRED_DISP" and [message] !~ "CRED_ACQ" and [message] !~ "USER_START" and [message] !~ "USER_END" {
	
		 grok {
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{IP:servername} %{WORD}: %{GREEDYDATA:unixdata}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
		}
          date {
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                       }
	
	kv {
	   source => "unixdata"
	   value_split => "="
	   field_split => " "
	   }
	}
	else if [message] =~ "audispd:" and [message] !~ "type=LOGIN" and [message] =~ "type=USER_ACCT" or [message] =~ "type=CRED_DISP" or [message] =~ "type=CRED_ACQ" or [message] =~ "type=USER_START" or [message] =~ "type=USER_END" {
	 grok {
        #       match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{IP:servername} %{WORD}: node=%{WORD} type=%{WORD} msg=%{DATA}:%{NUMBER} user pid=%{NUMBER} uid=%{NUMBER} auid=%{NUMBER} msg=%{WORD} %{DATA}=%{WORD} exe=%{DATA} hostname=[?][?] addr=[?][?] terminal=%{WORD} res=%{WORD}"] 
		match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{IP} %{WORD:eventtype}: %{GREEDYDATA:unixdata}"]
              }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                }
          date {
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
		}
	kv {
	   source => "unixdata"
	   field_split => " "
	   value_split => "="
	   }
	mutate{
		add_field => ["servername","%{node}"]
                add_field => ["objecttype","%{type}"]
                add_field => ["txncustomfield1","%{msg}"]
                add_field => ["txncustomfield2","%{user pid}"]
                add_field => ["uuid","%{uid}"]
                add_field => ["employeeid","%{acct}"]
                add_field => ["objectfolder","%{exe}"]
                add_field => ["txncustomfield3","%{terminal}"]
                add_field => ["eventdesc","%{res}"]
		}
	}
	else if [message] =~ "crontab"
	{
	grok {
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{WORD:servername} %{WORD:eventtype}\[%{NUMBER:num}\]: %{GREEDYDATA:unixdata}"]
                 }
		mutate{
		gsub => ["unixdata"," EDIT","-EDIT"]
		}
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 split => ["unixdata"," "]
		add_field => ["employeeid","%{[unixdata][0]}"]
                add_field => ["eventdesc","%{[unixdata][1]}"]
                add_field => ["txncustomfield20","%{[unixdata][2]}"]
		} 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                       }
	}
	else if [message] =~ "ftpd" {
	 grok {
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{DATA:servername} %{WORD}\[%{NUMBER:num}\]: %{GREEDYDATA:unixdata}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 } 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
		}
	}
	else if [message] =~ "nfs:" and [message] =~ "userid"
	{
	grok { 
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{IP:servername} %{WORD:eventtype}: \[%{DATA:num}\] %{WORD:objecttype}: %{GREEDYDATA:unixdata}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 } 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                }      
	}
	else if [message] =~ "systemd:" 
	{
	grok {  
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{WORD:servername} %{WORD:eventtype}: %{GREEDYDATA:unixdata}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
		  split => ["unixdata"," "]
                add_field => ["eventdesc","%{[unixdata][0]} %{[unixdata][1]}"]
		add_field => ["systemdnum","%{[unixdata][2]}"]
                add_field => ["employeeid","%{[unixdata][5]}"]
		} 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                }      
	}
	else if [message] =~ "useradd" and [message] =~ "new user:"
	{

	   grok {  
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{WORD:servername} %{WORD:eventtype}\[%{NUMBER:num}\]: %{DATA:objecttyoe}: %{GREEDYDATA:unixdata}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 } 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                }      
	kv {
	   source => "unixdata"
	   value_split => "="
	   field_split => ", "
	   }
	mutate{
		add_field => ["eventdesc","%{name}"]
                add_field => ["uuid","%{UID}"]
                add_field => ["txncustomfield2","%{GID}"]
                add_field => ["objectfolder","%{home}"]
                add_field => ["txncustomfield3","%{shell}"]
		}
	}
	else if [message] =~ "userdel" and [message] =~ ": delete user" 
	{
 
	grok {  
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{WORD:servername} %{WORD:eventtype}\[%{NUMBER:num}\]: %{GREEDYDATA:unixdata}"]
                 }
		mutate{
		gsub => ["unixdata","delete user","delete-user"]
		}
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                   split => ["unixdata"," "]
		   add_field => ["eventdesc","%{[unixdata][0]}"]
		   add_field => ["employeeid","%{[unixdata][1]}"]
		} 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                }      


	}
	else if [message] =~ "uxauthd" and [message] !~ "UNAB:" and [message] !~ "su:" {

	grok {  
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{DATA:servername} %{WORD}\[%{NUMBER:num}\]: %{GREEDYDATA:unixdata}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 } 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                }      

	}
	else if [message] =~ "uxauthd" and [message] =~ "UNAB:" and [message] !~ "su:" {
	
	 grok {
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{WORD:servername} %{WORD}: %{WORD}: %{GREEDYDATA:unixdata}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 } 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                }      
	}
	else if [message] =~ "uxauthd" and [message] =~ "UNAB" and [message] =~ "su:" 
	{
	grok {
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{DATA:servername} %{WORD}: %{GREEDYDATA:unixdata}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 }
          date {
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                }
	}
	else if [message] == "systemd-logind:"
        {
        grok {
                  match => ["message","%{MONTH:unixmonth} %{MONTHDAY:unixday} %{TIME:unixtime} %{WORD:servername} %{WORD:eventtype}: %{DATA:objecttype}: %{DATA:eventdesc}"]
                 }
          mutate {
                   add_field => ["unixdate","2017-%{unixmonth}-%{unixday} %{unixtime}"]
                 } 
          date { 
                match => ["unixdate","YYYY-MMM-dd HH:mm:ss"]
                target => "Eventdate"
                }
         date_formatter {
                source => "Eventdate"
                pattern => "YYYY-MM-dd HH:mm:ss"
                target => "eventdate"
                }
        }
if [employeeid] =~ "%{"
{
ruby { code => "event['employeeid'] = nil" }
}
if [uuid] =~ "%{"
{
ruby { code => "event['uuid'] = nil" }
}
if [objecttype] =~ "%{"
{
ruby { code => "event['objecttype'] = nil" }
}
if [domainname] =~ "%{"
{
ruby { code => "event['domainname'] = nil" }
}
if [txncustomfield1] =~ "%{"
{
ruby { code => "event['txncustomfield1'] = nil" }
}
if [txncustomfield2] =~ "%{"
{
ruby { code => "event['txncustomfield2'] = nil" }
}
if [objectfolder] =~ "%{"
{
ruby { code => "event['objectfolder'] = nil" }
}
if [txncustomfield3] =~ "%{"
{
ruby { code => "event['txncustomfield3'] = nil" }
}
if [txncustomfield4] =~ "%{"
{
ruby { code => "event['txncustomfield4'] = nil" }
}
if [txncustomfield20] =~ "%{"
{
ruby { code => "event['txncustomfield20'] = nil" }
}
if [txncustomfield24] =~ "%{"
{
ruby { code => "event['txncustomfield24'] = nil" }
}
if [txncustomfield25] =~ "%{"
{
ruby { code => "event['txncustomfield25'] = nil" }
}
if [systemdnum] =~ "%{"
{
ruby { code => "event['systemdnum'] = nil" }
}
}
output 
{
	if [message] =~ "pam_unix" or [message] =~ "crond" or [message] =~ "CROND" or [message] =~ "type=USER_ACCT" or [message] =~ "crontab" or [message] =~ "nfs:" or [message] =~ "systemd:" or [message] =~ "useradd" or [message] =~ "userdel" or [message] == "systemd-logind:"
         {
	csv {
                fields => ["eventdate","servername","eventtype","objecttype","eventdesc","employeeid","uuid","domainname","txncustomfield1","txncustomfield2","objectfolder","txncustomfield3","txncustomfield4","txncustomfield20","systemdnum"]
                path => "/opt/gra/activitylogmgr/logs/out/syslog/Unix_%{+YYYY-MM-dd-HH}.csv"
            }
	  
	}
#	stdout 
#	{
#	    codec => "rubydebug"
#	}
}
