input{

#        stdin{}
#udp {
#	type => "Syslog"
#	port => 6000
#    }
file {
        path => "/home/syslog_final/dlpntwrk_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}

filter 
{
	mutate {
		 gsub => ["message","  "," "]
		 gsub => ["message","WinNT://ITLINFOSYS/",""]
                 gsub => ["message","WinNT://infosys.com/",""]
                 gsub => ["message","WinNT://edgeverve.com/",""]
                 gsub => ["message","WinNT://ext.icicibank.com/",""]
                 gsub => ["message","WinNT://kalupurbank.com/",""]
                 gsub => ["message","WinNT://moonraft.com/",""]
		}
  if [message] =~ "Vontu Incident" and [message] =~ "vontuenf" or [message] =~ "VONILMSBLRENB44"
   {	
	grok {
		match => ["message","%{MONTH:dlpntwrkmonth} %{MONTHDAY:dlpntwrkday} %{TIME:dlpntwrktime} %{DATA} %{DATA:servername} %{DATA:a}: %{GREEDYDATA:dlpntwrkmsg}" ]
	     }
	
	mutate {
		add_field => ["dlpntwrkdate","2017-%{dlpntwrkmonth}-%{dlpntwrkday} %{dlpntwrktime}"]
		split => ["dlpntwrkdate"," "]
		add_field => ["txncustomfield9","%{[dlpntwrkdate][0]}"]
		add_field => ["txncustomfield10","%{[dlpntwrkdate][1]}"]
	       }
	date {
		match => ["dlpntwrkdate", "YYYY-MMM-dd HH:mm:ss"]
		target => "dlpntwrkeventDate"
	     }
	date_formatter {
		source => "dlpntwrkeventDate"
		pattern => "YYYY-MM-dd HH:mm:ss"
		target => "eventdate"
		       }
	csv {
		source => "dlpntwrkmsg"
		autogenerate_column_names => "true"
		separator => "^^"
	    }
	mutate {
                add_field => ["txncustomfield3","%{a} %{column1}"]
                add_field => ["txncustomfield2","%{column2}"]
                add_field => ["objecttype","%{column3}"]
		split => ["column4",":"]
		add_field => ["eventtype","%{[column4][0]}"]
                add_field => ["eventdesc","%{[column4][1]}"]
                add_field => ["objectclassification","%{column5}"]
                add_field => ["objectfolder","%{column6}"]
		split => ["column7","@"]
                add_field => ["employeeid","%{[column7][0]}"]
                add_field => ["objectname","%{column8}"]
                add_field => ["txncustomfield12","%{column9}"]
		add_field => ["txncustomfield4","%{column10}"]
		add_field => ["txncustomfield5","%{column11}"]
		add_field => ["txncustomfield6","%{column12}"]
		add_field => ["txncustomfield7","%{column13}"]
                add_field => ["domainname","%{column14}"]
		add_field => ["txncustomfield11","%{column15}"]

            }
     }
if "_grokparsefailure" in [tags] {  }
}
output {
if [message] =~ "Vontu Incident" and [message] =~ "vontuenf" or [message] =~ "VONILMSBLRENB44"
{

	csv {
		fields => ["eventdate","employeeid","domainname","servername","eventdesc","eventtype","objecttype","objectclassification","objectfolder","objectname","txncustomfield2","txncustomfield3","txncustomfield4","txncustomfield5","txncustomfield6","txncustomfield7","txncustomfield8","txncustomfield9","txncustomfield10","txncustomfield11","txncustomfield12"]
		path => "/opt/gra/activitylogmgr/logs/out/syslog/dlp_ntwrk_%{+YYYY-MM-dd-HH}.csv"
	    }
}
#	stdout{
#		codec => rubydebug
#	      }
}

