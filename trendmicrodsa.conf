input {
#stdin{}
#udp{
#	port => 6000
#}
file {
        path => "/home/syslog_final/TrendMicro_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}

filter {
	if [message] =~ "Trend Micro"
	{
    mutate {
         # Saved the original message into a temporary field
         add_field => { "tmp_message" => "%{message}" }
         # splits message on the "|"  and has index numbers
         split => ["message", "|"]
         # generate fields for the CEF header
         add_field => { "cef_version" => "%{message[0]}" }
         add_field => { "cef_device_vendor" => "%{message[1]}" }
         add_field => { "cef_device_product" => "%{message[2]}" }
         add_field => { "cef_device_version" => "%{message[3]}" }
         add_field => { "cef_sig_id" => "%{message[4]}" }
         add_field => { "cef_sig_name" => "%{message[5]}" }
         add_field => { "cef_sig_severity" => "%{message[6]}" }
	
 	 gsub => [  "message", "([\w\"\,\/:_\~\.]+=)", ",!\1" ]

        }
	
        # Parse the message with field=value formats
        kv {    
         field_split => ",!"
         trimkey => "<>\[\], "
         trim => "<>\[\],"        
         }
mutate {
	split => ["cef_version"," "]
        convert => { "end" => "string" }
	gsub => [ "end", ".{4}$", "" ]
}
mutate {
	add_field => ["trenddate","2017-%{[cef_version][0]}-%{[cef_version][1]} %{[cef_version][2]}"]
	add_field => ["domainname","%{[cef_version][3]}"]
	add_field => ["column1","%{cef_device_vendor}"]
	add_field => ["column2","%{cef_device_product}"]
	add_field => ["column3","%{cef_device_version}"]
	add_field => ["column4","%{cef_sig_id}"]
	add_field => ["column5","%{cef_sig_name}"]
	add_field => ["column6","%{cef_sig_severity}"]
	add_field => ["column7","%{cn1}"]
	add_field => ["column8","%{cn1Label}"]
	add_field => ["column9","%{dvchost}"]
	add_field => ["column10","%{TrendMicroDsTenant}"]
	add_field => ["column11","%{TrendMicroDsTenantId}"]
	add_field => ["column12","%{dmac}"]
	add_field => ["column13","%{smac}"]
	add_field => ["column14","%{TrendMicroDsFrameType}"]
	add_field => ["column15","%{src}"]
	add_field => ["column16","%{dst}"]
	add_field => ["column17","%{in}"]
	add_field => ["column18","%{cs3}"]
	add_field => ["column19","%{cs3Label}"]
	add_field => ["column20","%{proto}"]
	add_field => ["column21","%{spt}"]
	add_field => ["column22","%{dpt}"]
	add_field => ["column23","%{cs2}"]
	add_field => ["column24","%{cs2Label}"]
	add_field => ["column25","%{cnt}"]
	add_field => ["column26","%{act}"]
	add_field => ["column27","%{cn3}"]
	add_field => ["column28","%{cn3Label}"]
	add_field => ["column29","%{cs5}"]
	add_field => ["column30","%{cs5Label}"]
	add_field => ["column31","%{cs1}"]
	add_field => ["column32","%{cs1Label}"]
	add_field => ["column33","%{cs6}"]
	add_field => ["column34","%{cs6Label}"]
	}
date {
	match => ["trenddate","YYYY-MMM-dd HH:mm:ss"]
	target => "Eventdate"
}
date_formatter {
		source => "Eventdate"
		pattern  => "YYYY-MM-dd HH:mm:ss"
	        target => "eventdate"
}
        mutate {       
        # Revert original message and remove temporary field
        replace => { "message" => "%{tmp_message}" }
        remove_field => [ "tmp_message" ]
    	      }
}
if [column27] =~ "%{"
{
ruby { code => "event['column27'] = nil" }
}
if [column28] =~ "%{"
{
ruby { code => "event['column28'] = nil" }
}
if [column29] =~ "%{"
{
ruby { code => "event['column29'] = nil" }
}
if [column30] =~ "%{"
{
ruby { code => "event['column30'] = nil" }
}
if [column31] =~ "%{"
{
ruby { code => "event['column31'] = nil" }
}
if [column32] =~ "%{"
{
ruby { code => "event['column32'] = nil" }
}
if [column33] =~ "%{"
{
ruby { code => "event['column33'] = nil" }
}
if [column34] =~ "%{"
{
ruby { code => "event['column34'] = nil" }
}
}
output
{
	if [message] =~ "Trend Micro"
	{
	csv {
                fields => ["eventdate","domainname","column1","column2","column3","column4","column5","column6","column7","column8","column9","column10","column11","column12","column13","column14","column15","column16","column17","column18","column19","column20","column21","column22","column23","column24","column25","column26","column27","column28","column29","column30","column31","column32","column33","column34"]
	path => "/opt/gra/activitylogmgr/logs/out/syslog/Trendmicro_%{+YYYY-MM-dd-HH}.csv"
            }
#     stdout {
 #           codec => rubydebug
  #          }
}
}
