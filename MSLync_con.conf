input{
#stdin{}
file {
        path => "/home/syslog_final/MSLync_2017*"
        type => ["file"]
        start_position => "beginning"
        }
}
filter
{
        if [message] =~ "%MSLync_Logs_con:"
        {
        grok {
                match => ["message","%{DATA}: %{GREEDYDATA:MSLyncmsg}" ]
             }

        csv {
                source => "MSLyncmsg"
                autogenerate_column_names => "true"
                separator => "||"
            }
         mutate {
                add_field => ["txncustomfield1","%{column1}"]
                add_field => ["eventdate","%{column2}"]
		add_field => ["txncustomfield4","%{column3}"]
                add_field => ["txncustomfield20","%{column4}"]
                add_field => ["txncustomfield21","%{column5}"]
		split => ["column6","@"]
                add_field => ["txncustomfield5","%{[column6][0]}"]
		add_field => ["txncustomfield6","%{column7}"]
                add_field => ["txncustomfield8","%{column10}"]
                add_field => ["txncustomfield9","%{column11}"]
                add_field => ["txncustomfield12","%{column14}"]
                add_field => ["txncustomfield17","%{column16}"]
                add_field => ["txncustomfield18","%{column17}"]
                add_field => ["objectname","%{column19}"]
                add_field => ["txncustomfield19","%{column26}"]
                add_field => ["txncustomfield3","%{column27}"]                
		}

        }
if "_grokparsefailure" in [tags]{       drop {}  }
}
output
{
if [message] =~ "%MSLync_Logs_con:"
        {

        csv {
                 fields => ["txncustomfield1","eventdate","txncustomfield4","txncustomfield20","txncustomfield21","txncustomfield5","txncustomfield6","txncustomfield8","txncustomfield9","txncustomfield12","txncustomfield17","txncustomfield18","objectname","txncustomfield19","txncustomfield3"]
                path => "/opt/gra/activitylogmgr/logs/out/syslog/MSLync_con_%{+YYYY-MM-dd-HH}.csv"
            }
#       stdout{
 #              codec => rubydebug
  #           }
}
}

